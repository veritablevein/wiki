created: 20220530141951763
creator: TidGiUser
modified: 20221123103815917
modifier: TidGiUser
tags: JavaScript XML
title: AJAX
type: text/vnd.tiddlywiki

> AJAX（Asynchronous JavaScript and XML），就是浏览器提供的一套 API，可以通过 JavaScript 调用，从而实现通过代码控制请求与响应。实现通过 JavaScript 进行网络编程。用现有技术集合的‘新’方法，包括：HTML 或 XHTML,  CSS, JavaScript, DOM, XML, XSLT, 以及最重要的 XMLHttpRequest。当使用结合了这些技术的 AJAX 模型以后， 网页应用能够快速地将增量更新呈现在用户界面上，而不需要重载（刷新）整个页面。这使得程序能够更快地回应用户的操作。XML：最早在客户端与服务端之间传递数据时所采用的数据格式

! 背景

* 在了解 AJAX 之前我们可以简单的认为「JavaScript 能力有限」，因为在此之前 Web 平台提供所有的 API 都只停留在「单机」的阶段。
* 这样就会造成一些无法实现的功能，例如：
** 无法在实现用户登录功能时，当用户输入邮箱地址显示用户对应的头像
** 无法在实现用户注册功能时，当用户输入邮箱或者用户名就提示是否存在
** 无法在实现留言板功能时，实时看到最新的用户留言


这些功能的开发最终都卡在一个相同的问题上：''数据存放在服务端，无法通过已知的 API 获取''

! 已知发送请求的方式

* 地址栏输入地址，回车，刷新
* 特定元素的 href 或 src 属性
* 表单提交

这些方案都是我们无法通过或者很难通过代码的方式进行编程操作的

! 需求

* 对服务端发出请求并且接受服务端返回的响应
* 如果我们可以通过 JavaScript 直接发送网络请求，那么 Web 的可能就会更多，随之能够实现的功能也会更多，至少不再是只能开发「单机游戏」

! 诞生

* AJAX最早出现在 2005 年的 [[Google Suggest]]
* 它不是像 HTML、JavaScript 或 CSS 这样的一种“正式的”技术
* 它是在浏览器端进行网络编程（发送请求、接收响应）的技术方案
* 它使我们可以通过 JavaScript 直接获取服务端最新的内容而不必重新加载页面
* 让 Web 更能接近桌面应用的用户体验

! 应用场景

* 按需获取数据
* 对用户数据校验
* 自动更新页面内容
* 提升用户体验，无刷新的体验

! 使用AJAX

使用 jQuery 中封装的 Ajax，快速体验带来的效果，免费接口：[ext[https://jsonplaceholder.typicode.com]]