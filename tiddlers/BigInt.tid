created: 20221008140749509
creator: TidGiUser
modified: 20221008141505037
modifier: TidGiUser
tags: ES11
title: BigInt
type: text/vnd.tiddlywiki

JavaScript 所有数字都保存成 64 位浮点数，这给数值的表示带来了两大限制:

# 数值的精度只能到 53 个二进制位（相当于 16 个十进制位），大于这个范围的整数，JavaScript 是无法精确表示，这使得 JavaScript 不适合进行科学和金融方面的精确计算。
# 大于或等于2的1024次方的数值，JavaScript 无法表示，会返回Infinity。
ES11引入了一种新的数据类型 BigInt（大整数），来解决这个问题，这是 ECMAScript 的第八种数据类型。BigInt 只用来表示整数，没有位数的限制，任何位数的整数都可以精确表示

```javascript
// ES11之前 max_safe_integer
const maxInt = Number.MAX_SAFE_INTEGER
console.log(maxInt)     // 9007199254740991
console.log(maxInt + 1) // 9007199254740992
console.log(maxInt + 2) // 9007199254740992

// ES11之后: BigInt
const bigInt = 900719925474099100n
console.log(bigInt + 10n)

const num = 100
console.log(bigInt + BigInt(num))

const smallNum = Number(bigInt)
console.log(smallNum)

```